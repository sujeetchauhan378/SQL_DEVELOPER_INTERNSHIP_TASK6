-- =============================
-- Task 6: Subqueries & Nested Queries
-- =============================

-- 1. Drop old tables if they exist
DROP TABLE IF EXISTS Employees;
DROP TABLE IF EXISTS Departments;
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Customers;

-- 2. Create Departments table
CREATE TABLE Departments (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(50)
);

-- 3. Create Employees table
CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
    EmpName VARCHAR(50),
    DeptID INT,
    Salary DECIMAL(10,2),
    FOREIGN KEY (DeptID) REFERENCES Departments(DeptID)
);

-- 4. Create Customers table
CREATE TABLE Customers (
    CustID INT PRIMARY KEY,
    CustName VARCHAR(50)
);

-- 5. Create Orders table
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustID INT,
    Amount DECIMAL(10,2),
    FOREIGN KEY (CustID) REFERENCES Customers(CustID)
);

-- 6. Insert sample data into Departments
INSERT INTO Departments VALUES
(1, 'HR'), 
(2, 'IT'), 
(3, 'Sales');

-- 7. Insert sample data into Employees
INSERT INTO Employees VALUES
(101, 'John', 1, 50000),
(102, 'Emma', 1, 60000),
(103, 'Ava', 2, 75000),
(104, 'Liam', 2, 90000),
(105, 'Noah', 3, 45000);

-- 8. Insert sample data into Customers
INSERT INTO Customers VALUES
(1, 'Alice'), 
(2, 'Bob'), 
(3, 'Charlie');

-- 9. Insert sample data into Orders
INSERT INTO Orders VALUES
(1, 1, 2000),
(2, 1, 1500),
(3, 2, 3000),
(4, 3, 500);

-- =============================
-- QUERIES
-- =============================

-- 1️⃣ Scalar Subquery: Employee with the highest salary
SELECT EmpName, Salary
FROM Employees
WHERE Salary = (SELECT MAX(Salary) FROM Employees);

-- 2️⃣ Scalar Subquery in SELECT clause: Employee name and department
SELECT EmpName, Salary, 
       (SELECT DeptName FROM Departments d WHERE d.DeptID = e.DeptID) AS Department
FROM Employees e;

-- 3️⃣ Correlated Subquery: Employees earning above department average
SELECT EmpName, Salary, DeptID
FROM Employees e
WHERE Salary > (
    SELECT AVG(Salary)
    FROM Employees
    WHERE DeptID = e.DeptID
);

-- 4️⃣ Subquery with IN: Customers with orders above 1000
SELECT CustName
FROM Customers
WHERE CustID IN (
    SELECT CustID FROM Orders WHERE Amount > 1000
);

-- 5️⃣ Subquery with EXISTS: Customers with at least one order
SELECT CustName
FROM Customers c
WHERE EXISTS (
    SELECT 1 FROM Orders o WHERE o.CustID = c.CustID
);

-- 6️⃣ Subquery in FROM Clause (Derived Table): Dept average salary with employees
SELECT e.EmpName, e.Salary, dept_avg.AvgSalary
FROM Employees e
JOIN (
    SELECT DeptID, AVG(Salary) AS AvgSalary
    FROM Employees
    GROUP BY DeptID
) dept_avg ON e.DeptID = dept_avg.DeptID;

-- 7️⃣ Nested Subquery: Second highest salary
SELECT MAX(Salary) AS SecondHighestSalary
FROM Employees
WHERE Salary < (SELECT MAX(Salary) FROM Employees);

-- 8️⃣ ANY / ALL Example: Employees earning more than all HR employees
SELECT EmpName, Salary
FROM Employees
WHERE Salary > (SELECT MAX(Salary) FROM Employees WHERE DeptID = 1);
